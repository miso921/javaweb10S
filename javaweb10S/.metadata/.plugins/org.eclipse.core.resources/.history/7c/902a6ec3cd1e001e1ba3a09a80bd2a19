package com.spring.javaweb10S;

import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.ArrayList;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.spring.javaweb10S.service.ShopService;
import com.spring.javaweb10S.vo.ItemOrderVO;
import com.spring.javaweb10S.vo.OptionVO;
import com.spring.javaweb10S.vo.ProductVO;

@Controller
@RequestMapping("/shop")
public class ShopController {

	@Autowired
	ShopService shopService;
	
	// 가게 메뉴를 누른 후 화면으로 이동
	@RequestMapping(value = "/itemList", method = RequestMethod.GET)
	public String itemListGet(Model model,
			@RequestParam(name="part", defaultValue="전체", required=false) String part) {
		ArrayList<ProductVO> partVOS = shopService.getItemPart();
		ArrayList<String> parts = new ArrayList<>();
		
		for(ProductVO partVO : partVOS) {
			if(partVO.getPart().equals("freshFood")) parts.add("신선식품");
			else if(partVO.getPart().equals("processedFood")) parts.add("가공식품");
			else if(partVO.getPart().equals("kitchenWare")) parts.add("주방용품");
		}
		model.addAttribute("partVOS",partVOS);
		model.addAttribute("parts",parts);
		model.addAttribute("part",part);
		
		ArrayList<ProductVO> itemVOS = shopService.getPartItemList(part);
		model.addAttribute("itemVOS",itemVOS);
		
		return "shop/itemList";
	}
	
	// 상품 상세정보 창으로 이동
	@RequestMapping(value = "/itemContent", method = RequestMethod.GET)
	public String itemContentGet(int idx, Model model) {
		ProductVO productVO = shopService.getItemContent(idx); // 상품의 상세정보 불러오기
		ArrayList<OptionVO> optionVOS = shopService.getItemOption(idx); // 상품의 옵션 정보 불러오기
		
		model.addAttribute("productVO",productVO);
		model.addAttribute("optionVOS",optionVOS);
		
		return "shop/itemContent";
	}
	
	// 장바구니 목록으로 이동
	@RequestMapping(value = "shop/itemCart", method = RequestMethod.POST)
	public String itemCartPost(HttpSession session) {
		String mid = session.getAttribute("sMid").toString();
		
		// 주문한 상품에 대하여 '고유번호'를 만들어준다.
		// 고유주문번호(idx) = 기존에 존재하는 주문테이블의 고유번호 + 1
		ItemOrderVO maxIdx = shopService.getOrderMaxIdx();
		int idx = 1;
		if(maxIdx != null) idx = maxIdx.getMaxIdx() + 1;
		
		Date today = new Date();
		SimpleDateFormat sdf = new SimpleDateFormat("yyyyMMdd");
		String orderIdx = sdf.format(today) + idx;
		
		// 장바구니에서 구매를 위해 선택한 모든 항목들은 배열로 넘어온다.
		String[] idxChecked = request.getParameterValues("idxChecked");
		
		return "";
	}
	
	
}
