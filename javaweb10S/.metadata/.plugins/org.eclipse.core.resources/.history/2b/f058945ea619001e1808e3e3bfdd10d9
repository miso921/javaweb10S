package com.spring.javaweb10S;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

@Controller
public class MessageController {
	
	@RequestMapping(value="/message/{msgFlag}", method=RequestMethod.GET)
	public String messageGet(@PathVariable String msgFlag, Model model,
			@RequestParam(name="mid", defaultValue = "", required = false) String mid) {
		
		if(msgFlag.equals("memberLoginOk")) {
			model.addAttribute("msg", mid + "님 로그인되었습니다!");
			model.addAttribute("url", "/");
		}
		else if(msgFlag.equals("memberLoginNo")) {
			model.addAttribute("msg", "로그인이 불가합니다.\\n다시 확인인하세요!");
			model.addAttribute("url", "/member/memberLoginJoin");
		}
		else if(msgFlag.equals("memberLogout")) {
			model.addAttribute("msg", mid+"님 로그아웃되었습니다!");
			model.addAttribute("url", "/");
		}
		else if(msgFlag.equals("memberImsiPwdOk")) {
			model.addAttribute("msg", "임시비밀번호가 발급되었습니다.\\n이메일을 확인해주세요!");
			model.addAttribute("url", "/member/memberLoginJoin");
		}
		else if(msgFlag.equals("memberImsiPwdNo")) {
			model.addAttribute("msg", "임시비밀번호 전송에 실패했습니다.\\n재시도 부탁드립니다.");
			model.addAttribute("url", "/member/memberFindPwd");
		}
		else if(msgFlag.equals("memberEmailCheckNo")) {
			model.addAttribute("msg", "입력하신 이메일을 확인해주세요!");
			model.addAttribute("url", "/member/memberFindPwd");
		}
		else if(msgFlag.equals("memberIdCheckNo")) {
			model.addAttribute("msg", "입력하신 아이디는 존재하지 않는 정보입니다!");
			model.addAttribute("url", "/member/memberFindPwd");
		}
		else if(msgFlag.equals("memberProfileUploadOk")) {
			model.addAttribute("msg", "프로필 사진이 업로드되었습니다.");
			model.addAttribute("url", "/member/memberMypage");
		}
		else if(msgFlag.equals("memberProfileUploadNo")) {
			model.addAttribute("msg", "프로필 사진 업로드에 실패했습니다!");
			model.addAttribute("url", "/member/memberMypage");
		}
		else if(msgFlag.equals("memberProfileMidNo")) {
			model.addAttribute("msg", "회원 정보가 올바르지 않습니다.\\n재시도 부탁드립니다!");
			model.addAttribute("url", "/member/memberLoginJoin");
		}
		else if(msgFlag.equals("memberMidCheckNo")) {
			model.addAttribute("msg", "아이디를 확인하세요.");
			model.addAttribute("url", "/member/memberUpdate");
		}
		else if(msgFlag.equals("memberMidNO")) {
			model.addAttribute("msg", "로그인 후 사용하세요!");
			model.addAttribute("url", "/member/memberLoginJoin");
		}
		else if(msgFlag.equals("memberUpdateOk")) {
			model.addAttribute("msg", "회원정보가 모두 수정되었습니다!");
			model.addAttribute("url", "/member/memberMypage");
		}
		else if(msgFlag.equals("memberUpdateNo")) {
			model.addAttribute("msg", "회원정보 수정이 실패했습니다!\\n정보를 다시 확인하세요!");
			model.addAttribute("url", "/member/memberUpdate");
		}
		else if(msgFlag.equals("memberPwdCheckNo")) {
			model.addAttribute("msg", "비밀번호를 다시 확인하세요!");
			model.addAttribute("url", "/member/memberPwdUpdateCheck");
		}
		else if(msgFlag.equals("memberPwdUpdateOk")) {
			model.addAttribute("msg", "비밀번호 변경이 완료되었습니다!\\n비밀번호 변경 후 사용하세요!");
			model.addAttribute("url", "/member/memberLoginJoin");
		}
		else if(msgFlag.equals("memberCancleOk")) {
			model.addAttribute("msg", "회원탈퇴가 완료되었습니다!\\n30일 이내 같은 아이디로 가입할 수 없습니다.");
			model.addAttribute("url", "/");
		}
		else if(msgFlag.equals("productInputOk")) {
			model.addAttribute("msg", "상품등록이 완료되었습니다!");
			model.addAttribute("url", "/admin/product/productList");
		}
		else if(msgFlag.equals("productInputNo")) {
			model.addAttribute("msg", "상품등록에 실패했습니다!\\n다시 한번 확인하세요.");
			model.addAttribute("url", "/admin/product/productList");
		}
		return "include/message";
	}
}
